// src/shiki.ts
import { Decoration } from "prosemirror-view";
import "shiki";
function createParser(highlighter, options) {
  return function parser({ content, language, pos }) {
    var _a;
    const decorations = [];
    const { tokens } = highlighter.codeToTokens(content, {
      lang: language,
      // Use provided options for themes or just use first loaded theme
      ...options != null ? options : {
        theme: highlighter.getLoadedThemes()[0]
      }
    });
    let from = pos + 1;
    for (const line of tokens) {
      for (const token of line) {
        const to = from + token.content.length;
        const decoration = Decoration.inline(from, to, {
          // When using `options.themes` the `htmlStyle` field will be set, otherwise `color` will be set
          style: (_a = token.htmlStyle) != null ? _a : `color: ${token.color}`,
          class: "shiki"
        });
        decorations.push(decoration);
        from = to;
      }
      from += 1;
    }
    return decorations;
  };
}
export {
  createParser
};
